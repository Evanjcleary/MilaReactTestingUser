{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","components/SearchBtn/index.js","pages/Books.js","pages/NoMatch.js","components/DeleteBtn/index.js","pages/SavedBooks.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","BASEURL","APIKEY","API","randomBooks","axios","get","searchBooks","query","getSavedBooks","saveBook","bookData","post","deleteBook","id","delete","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","List","ListItem","Input","props","Object","assign","SearchBtn","role","tabIndex","Books","state","books","search","randomizeBooks","then","res","console","log","_this","setState","data","items","catch","err","testState","handleInputChange","event","_event$target","target","name","value","defineProperty","bookArray","i","bookToSave","title","volumeInfo","description","author","authors","link","previewLink","image","imageLinks","thumbnail","JSON","stringify","handleFormSubmit","preventDefault","this","_this2","components_Jumbotron","onChange","placeholder","components_SearchBtn","onClick","length","book","key","subtitle","href","Component","NoMatch","aria-label","DeleteBtn","SavedBooks","savedBooks","gatherBooks","deleteSavedBook","saved","_id","components_DeleteBtn","Nav","App","react_router_dom","components_Nav","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+VAaeA,MAXf,SAAAC,GAAiC,IAAZC,EAAYD,EAAZC,SACnB,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEC,UAAU,aAETT,oBCNHU,EAAU,iDACVC,EAAS,+CAGEC,EAAA,CAEXC,YAAa,WACT,OAAOC,IAAMC,IAAIL,EAAU,QAAUC,IAEzCK,YAAa,SAASC,GAClB,OAAOH,IAAMC,IAAIL,EAAUO,EAAQN,IAEvCO,cAAe,WACX,OAAOJ,IAAMC,IAAI,eAErBI,SAAU,SAASC,GACf,OAAON,IAAMO,KAAK,aAAcD,IAEpCE,WAAY,SAASC,GACjB,OAAOT,IAAMU,OAAO,cAAgBD,KChBrC,SAASE,EAAT1B,GAAwC,IAAnB2B,EAAmB3B,EAAnB2B,MAAO1B,EAAYD,EAAZC,SACjC,OAAOC,EAAAC,EAAAC,cAAA,OAAKM,UAAS,YAAAkB,OAAcD,EAAQ,SAAW,KAAO1B,GAIxD,SAAS4B,EAATC,GAAkC,IAAnBH,EAAmBG,EAAnBH,MAAO1B,EAAY6B,EAAZ7B,SAC3B,OAAOC,EAAAC,EAAAC,cAAA,OAAKM,UAAS,MAAAkB,OAAQD,EAAQ,SAAW,KAAO1B,GAKlD,SAAS8B,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAMhC,EAAY+B,EAAZ/B,SAC1B,OACEC,EAAAC,EAAAC,cAAA,OACEM,UAAWuB,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,MAEPnC,SCnBA,SAASoC,EAATrC,GAA4B,IAAZC,EAAYD,EAAZC,SACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2BACbR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,cAAcT,IAK3B,SAASqC,EAATR,GAAgC,IAAZ7B,EAAY6B,EAAZ7B,SACzB,OAAOC,EAAAC,EAAAC,cAAA,MAAIM,UAAU,mBAAmBT,GCVnC,SAASsC,EAAMC,GACpB,OACEtC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACbR,EAAAC,EAAAC,cAAA,QAAAqC,OAAAC,OAAA,CAAOhC,UAAU,gBAAmB8B,WCI3BG,MARf,SAAmBH,GACf,OACItC,EAAAC,EAAAC,cAAA,OAAAqC,OAAAC,OAAA,CAAMhC,UAAU,cAAiB8B,EAAjC,CAAwCI,KAAK,SAASC,SAAS,MAA/D,WC4IOC,6MArIXC,MAAQ,CACJC,MAAO,GACPC,OAAQ,MAQZC,eAAiB,WACbrC,EAAIC,cACCqC,KAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAIjCnC,YAAc,SAAAC,GACVL,EAAII,YAAYC,GACXiC,KAAK,SAAAC,GAAG,OAELG,EAAKC,SAAS,CACVR,MAAOI,EAAIK,KAAKC,UAEvBC,MAAM,SAAAC,GAAG,OAAIP,QAAQC,IAAIM,QAGlCC,UAAY,WACRR,QAAQC,IAAIC,EAAKR,MAAMC,UAG3Bc,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdZ,EAAKC,SAALf,OAAA2B,EAAA,EAAA3B,CAAA,GACKyB,EAAOC,OAMhB/C,SAAW,SAACI,GACR6B,QAAQC,IAAIC,EAAKR,MAAMC,OAGvB,IAFA,IAAIqB,EAAYd,EAAKR,MAAMC,MAEnBsB,EAAI,EAAGA,EAAI,GAAIA,IAEnB,GAAI9C,IAAO6C,EAAUC,GAAG9C,GAAI,CAExB,IAAI+C,EAAa,CACbC,MAAOH,EAAUC,GAAGG,WAAWD,MAC/BE,YAAaL,EAAUC,GAAGG,WAAWC,YACrCC,OAAQN,EAAUC,GAAGG,WAAWG,QAAQ,GACxCC,KAAMR,EAAUC,GAAGG,WAAWK,YAC9BC,MAAOV,EAAUC,GAAGG,WAAWO,WAAWC,WAE9C5B,QAAQC,IAAI,wBAA0B4B,KAAKC,UAAUZ,IACrD1D,EAAIO,SAASmD,GACRpB,KAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAI,8CACxBK,MAAM,SAAAC,GAAG,OAAIP,QAAQC,IAAIM,SAQ1CwB,iBAAmB,SAAArB,GACfA,EAAMsB,iBACNhC,QAAQC,IAAI,4BACZC,EAAKtC,YAAYsC,EAAKR,MAAME,4FA9D5BqC,KAAKpC,iBACLG,QAAQC,IAAI,wDAiEP,IAAAiC,EAAAD,KACL,OACIpF,EAAAC,EAAAC,cAACsB,EAAD,CAAWC,OAAK,GACZzB,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAAC2B,EAAD,CAAKE,KAAK,QACN/B,EAAAC,EAAAC,cAACoF,EAAD,KACItF,EAAAC,EAAAC,cAAA,sCAEJF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAACmC,EAAD,CACI4B,MAAOmB,KAAKvC,MAAME,OAClBwC,SAAUH,KAAKxB,kBACfI,KAAK,SACLwB,YAAY,qBAEhBxF,EAAAC,EAAAC,cAACuF,EAAD,CAAWC,QAASN,KAAKF,oBAE7BlF,EAAAC,EAAAC,cAACuF,EAAD,CAAWC,QAASN,KAAKzB,aAE7B3D,EAAAC,EAAAC,cAAC2B,EAAD,CAAKE,KAAK,QACN/B,EAAAC,EAAAC,cAACoF,EAAD,KACItF,EAAAC,EAAAC,cAAA,wCAEHkF,KAAKvC,MAAMC,MAAM6C,OAClB3F,EAAAC,EAAAC,cAACiC,EAAD,KACKiD,KAAKvC,MAAMC,MAAMb,IAAI,SAAA2D,GAAI,OACtB5F,EAAAC,EAAAC,cAACkC,EAAD,CAAUyD,IAAKD,EAAKtE,IAChBtB,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,cACK0F,EAAKrB,WAAWD,MADrB,OACgCsB,EAAKrB,WAAWG,UAE5C1E,EAAAC,EAAAC,cAAA,SAAI0F,EAAKrB,WAAWuB,UACpB9F,EAAAC,EAAAC,cAAA,KAAG6F,KAAMH,EAAKrB,WAAWK,aAAzB,aACJ5E,EAAAC,EAAAC,cAAA,UAAQwF,QAAS,kBAAML,EAAKnE,SAAS0E,EAAKtE,MAA1C,kBAORtB,EAAAC,EAAAC,cAAA,sDAnHR8F,aCaLC,MAnBf,WACE,OACEjG,EAAAC,EAAAC,cAACsB,EAAD,CAAWC,OAAK,GACdzB,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAAC2B,EAAD,CAAKE,KAAK,SACR/B,EAAAC,EAAAC,cAACoF,EAAD,KACEtF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMwC,KAAK,MAAMwD,aAAW,gCAA5B,4BCCCC,MARf,SAAmB7D,GACjB,OACEtC,EAAAC,EAAAC,cAAA,OAAAqC,OAAAC,OAAA,CAAMhC,UAAU,cAAiB8B,EAAjC,CAAwCI,KAAK,SAASC,SAAS,MAA/D,WCkFWyD,6MA9EXvD,MAAQ,CACJwD,WAAY,MAWhBC,YAAc,WACV3F,EAAIM,gBACCgC,KAAK,SAAAC,GAAG,OAELG,EAAKC,SAAS,CACV+C,WAAYnD,EAAIK,YAKhCgD,gBAAkB,SAACjF,GAEf6B,QAAQC,IAAI,gBAAkB9B,GAC9BX,EAAIU,WAAWC,GACd2B,KAAK,SAAAC,GAAG,OAAIG,EAAKiD,gBACjB7C,MAAM,SAAAC,GAAG,OAAIP,QAAQC,IAAIM,yFAtB1B0B,KAAKkB,+CA2BA,IAAAjB,EAAAD,KACL,OACIpF,EAAAC,EAAAC,cAACsB,EAAD,CAAWC,OAAK,GACZzB,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAAC2B,EAAD,CAAKE,KAAK,SACN/B,EAAAC,EAAAC,cAACoF,EAAD,KACItF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qCAGZF,EAAAC,EAAAC,cAAC2B,EAAD,CAAKE,KAAK,SACN/B,EAAAC,EAAAC,cAACiC,EAAD,KAEKiD,KAAKvC,MAAMwD,WAAWpE,IAAI,SAAAuE,GAAK,OAC5BxG,EAAAC,EAAAC,cAACkC,EAAD,CAAUyD,IAAKW,EAAMC,KACjBzG,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,cACKsG,EAAMlC,MADX,OACsBkC,EAAM/B,SAExBzE,EAAAC,EAAAC,cAAA,SAAIsG,EAAMhC,YAAV,KAEAxE,EAAAC,EAAAC,cAAA,KAAG6F,KAAMS,EAAM7B,MAAf,aACJ3E,EAAAC,EAAAC,cAACwG,EAAD,CAAWhB,QAAS,kBAAML,EAAKkB,gBAAgBC,EAAMC,sBAvDhET,aCGVW,MAVf,WACE,OACE3G,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kDACbR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,eAAeuF,KAAK,KAAjC,wBCkCSa,MAlBf,WAEI,OADAzD,QAAQC,IAAI,kBAEVpD,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4G,EAAD,MACA9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACE/G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtE,IACjC5C,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWtE,IACvC5C,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWd,IACtCpG,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOG,UAAWjB,QCrBxBkB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTzE,KAAK,SAAA6E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnF,QACf8E,UAAUC,cAAcO,WAK1BhF,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBK,MAAM,SAAA2E,GACLjF,QAAQiF,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOtI,EAAAC,EAAAC,cAACqI,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwBtB,OAAOC,UAC3CsB,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAhG,OAAMiH,GAAN,sBAENxB,EAwCX,SAAiCO,GAE/BoB,MAAMpB,GACHzE,KAAK,SAAA8F,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQnI,IAAI,gBAAgBoI,QAAQ,cAG7CvB,UAAUC,cAAcuB,MAAMlG,KAAK,SAAA6E,GACjCA,EAAasB,aAAanG,KAAK,WAC7BoE,OAAOC,SAAS+B,aAKpB5B,EAAgBC,KAGnBjE,MAAM,WACLN,QAAQC,IACN,mEAzDAkG,CAAwB5B,GAHxBD,EAAgBC,MC7BxB6B","file":"static/js/main.814dcd74.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nvar BASEURL = 'https://www.googleapis.com/books/v1/volumes?q='\nvar APIKEY = '&key=AIzaSyDNS2op_Ce00hAvNB-o2wam28IBeq8dCZg'\n\n\nexport default {\n\n    randomBooks: function() {\n        return axios.get(BASEURL + \"Apple\" + APIKEY);\n    },\n    searchBooks: function(query) {\n        return axios.get(BASEURL + query + APIKEY);\n    },\n    getSavedBooks: function() {\n        return axios.get(\"/api/books\");\n    },\n    saveBook: function(bookData) {\n        return axios.post(\"/api/books\", bookData);\n    },\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n}","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchBtn(props) {\n    return (\n        <span className=\"search-btn\" {...props} role=\"button\" tabIndex=\"0\">\n            Search\n        </span>\n    );\n}\n\nexport default SearchBtn","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron/\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid/\";\nimport { List, ListItem } from \"../components/List/\";\nimport { Input, FormBtn } from \"../components/Form/\";\nimport SearchBtn from \"../components/SearchBtn\";\n// import BookSearchForm from \"../components/BookSearchForm/\";\n\nclass Books extends Component {\n\n    state = {\n        books: [],\n        search: \"\"\n    }\n\n    componentDidMount() {\n        this.randomizeBooks()\n        console.log(\"New version showing\")\n    }\n\n    randomizeBooks = () => {\n        API.randomBooks()\n            .then(res => console.log(res))\n    }\n\n\n    searchBooks = query => {\n        API.searchBooks(query)\n            .then(res => \n                \n                this.setState({\n                    books: res.data.items\n                }))\n            .catch(err => console.log(err));\n    }\n\n    testState = () =>{\n        console.log(this.state.books)\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    \n\n    saveBook = (id) =>{\n        console.log(this.state.books);\n        var bookArray = this.state.books\n        // var bookToSave = \"\";\n        for(var i = 0; i < 10; i++) {\n            // console.log(bookArray[i].volumeInfo);\n            if (id === bookArray[i].id) {\n                // console.log(\"The book to save is:\" + JSON.stringify(bookArray[i].volumeInfo));\n                var bookToSave = {\n                    title: bookArray[i].volumeInfo.title,\n                    description: bookArray[i].volumeInfo.description,\n                    author: bookArray[i].volumeInfo.authors[0],\n                    link: bookArray[i].volumeInfo.previewLink,\n                    image: bookArray[i].volumeInfo.imageLinks.thumbnail\n                };\n                console.log(\"The book to save is: \" + JSON.stringify(bookToSave));\n                API.saveBook(bookToSave)\n                    .then(res => console.log(\"You've saved this Book to your Books DB!\"))\n                    .catch(err => console.log(err));\n            }\n        }\n\n        \n\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(\"Form has been submitted!\");\n        this.searchBooks(this.state.search)\n    }\n\n\n    render() {\n        return ( \n            <Container fluid>\n                <Row>\n                    <Col size=\"md-6\">\n                        <Jumbotron>\n                            <h1>Google Books React App!</h1>\n                        </Jumbotron>\n                        <form>\n                            <h5>Search for a Book Here</h5>\n                            <Input  \n                                value={this.state.search}\n                                onChange={this.handleInputChange}\n                                name=\"search\"\n                                placeholder=\"Title (required)\"\n                                />\n                            <SearchBtn onClick={this.handleFormSubmit}/>\n                        </form>\n                        <SearchBtn onClick={this.testState}/>\n                    </Col>\n                    <Col size=\"md-6\">\n                        <Jumbotron>\n                            <h1>Books You've Searched For</h1>\n                        </Jumbotron>\n                        {this.state.books.length ? (\n                        <List>\n                            {this.state.books.map(book => (\n                                <ListItem key={book.id}>\n                                    <h3>\n                                    <strong>\n                                        {book.volumeInfo.title} by {book.volumeInfo.authors}\n                                    </strong></h3>\n                                        <p>{book.volumeInfo.subtitle}</p>\n                                        <a href={book.volumeInfo.previewLink}>View more</a>\n                                    <button onClick={() => this.saveBook(book.id)}>Save book!</button>\n                                </ListItem>\n                            ))}\n\n                        </List>\n\n                         ) : ( \n                            <h3>No results yet, enter a search</h3>\n\n                        )}\n\n                    </Col>\n                </Row>\n\n\n\n\n            </Container>\n\n\n\n        )\n    }\n\n\n}\n\nexport default Books;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid/\";\nimport Jumbotron from \"../components/Jumbotron/\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid/\";\nimport { List, ListItem } from \"../components/List\";\n// import { Input, FormBtn } from \"../components/Form\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n\n\nclass SavedBooks extends Component {\n\n    state = {\n        savedBooks: [],\n    }\n\n    componentDidMount() {\n        this.gatherBooks()\n    }\n\n    // componentDidUpdate() {\n    //     this.gatherBooks()\n    // }\n\n    gatherBooks = () => {\n        API.getSavedBooks()\n            .then(res => \n                \n                this.setState({\n                    savedBooks: res.data\n                })\n                )\n        }\n\n    deleteSavedBook = (id) =>\n    {\n        console.log(\"You deleted: \" + id)\n        API.deleteBook(id)\n        .then(res => this.gatherBooks())\n        .catch(err => console.log(err));\n            \n    }\n\n    \n    render() {\n        return(\n            <Container fluid>\n                <Row>\n                    <Col size=\"xs-12\">\n                        <Jumbotron>\n                            <h1><strong>Your Saved Books</strong></h1>\n                        </Jumbotron>\n                    </Col>\n                    <Col size=\"xs-12\">\n                        <List>\n\n                            {this.state.savedBooks.map(saved => (\n                                <ListItem key={saved._id}>\n                                    <h3>\n                                    <strong>\n                                        {saved.title} by {saved.author}\n                                    </strong></h3>\n                                        <p>{saved.description} </p>\n\n                                        <a href={saved.link}>View book</a>\n                                    <DeleteBtn onClick={() => this.deleteSavedBook(saved._id)}/>\n                                </ListItem>\n                            ))}\n\n                        </List>\n\n\n                    </Col>\n\n\n\n                </Row>\n            </Container>\n\n\n\n\n\n        )\n    }\n\n\n\n}\n\nexport default SavedBooks","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        React Reading List\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Books from \"./pages/Books\";\nimport NoMatch from \"./pages/NoMatch\";\nimport SavedBooks from \"./pages/SavedBooks\";\nimport Nav from \"./components/Nav/\";\n\n// class App extends Component {\n  // state = {\n  //   books: [],\n  //   title: \"\",\n  //   author: \"\",\n  //   image: \"\",\n  //   description: \"\",\n  //   link: \"\",\n  // }\n\n\n  // render() {\n\nfunction App () {\n    console.log(\"New App loaded\");\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Books} />\n            <Route exact path=\"/search\" component={Books} />\n            <Route exact path=\"/saved\" component={SavedBooks} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}